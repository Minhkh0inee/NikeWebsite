   <form name="container-form" method="POST" action="/courses/handle-form-actions" class="mt-4">
        <h3>Shoes were deleted</h3>
        <a href="/me/stored/courses">Back to the Shoes list</a>
        <table class="table mt-4">
    <div class="mt-4 d-flex align-items-center">
          <div class="form-check">
          <input class="form-check-input" type="checkbox" value="" id="checkbox-all">
          <label class="form-check-label" for="defaultCheck1" id="checkbox-all">
            Choose all
          </label>
          </div>

          <select class="form-control form-control-sm checkbox-select-all-options" name="action" required>
              <option value="">---Choose action</option>
              <option>Restore</option>
              <option>Delete</option>
           
          </select>
    <button class="btn btn-primary btn-sm disabled btn-executed">Execute</button>
        </div>

    
    
    
    <thead>
        <tr>
            <th scope="col" colspan="2">#</th>
            <th scope="col">Shoes name</th>
            <th scope="col">Type</th>
            <th scope="col">Price</th>
            <th scope="col" colspan="2">Update</th>
            
        </tr>
    </thead>
    <tbody>
        {{#each courses}}
        <tr>
            <td>
              <div class="form-check">
                <input class="form-check-input" type="checkbox" value="{{this._id}}" name="shoesIds[]" id="defaultCheck1">
                
            </div>
            </td>

            {{!-- //hàm helper sum của handlebarjs được tạo trong index.js --}}
            <th scope="row">{{sum @index 1}}</th> 
            <td><a href="/courses/{{this.slug}}">{{this.name}}</a> </td>
            <td>{{this.description}}</td>
            <td>{{this.price}}</td>
            <td>
                <a href="" class="btn btn-link btn-restore" data-id="{{this._id}}">Restore</a>
                <a href="" data-toggle="modal" data-target="#delete-shoes-modal" class="btn btn-link" data-id ="{{this._id}}" >Delete</a>
                                                                                                    {{!-- data-id de dua tren id cua database de xoa --}}
            </td>
        </tr>
        {{else}}
        <tr><td colspan="5">
          You haven't deleted any shoes in the list
          <a href="/me/stored/courses" class="text-center">Click here to back to shoes list</a>
        </td></tr>
        {{/each}}
    </tbody>
    </table>
         </form>

{{!-- Confirm delete --}}
    <div id="delete-shoes-modal" class="modal" tabindex="-1" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Deleting shoes</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p>Do you want to delete permantly this shoes? Cannot remove this shoes after you click delete</p>
      </div>
      <div class="modal-footer">
        <button id="btn-delete-course" type="button" class="btn btn-danger">Delete</button>   {{!-- nút xóa --}}
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
      </div>
    </div>
  </div>
</div>


{{!-- delete hidden form --}}
<form method="POST" name ="delete-form">
{{!-- tạo form trống để phục vụ cho việc submit khi xóa --}}
</form>

<form method="POST" name ="restore-form">
{{!-- tạo form trống để phục vụ cho việc submit khi xóa --}}
</form>


<script> //lay tu boostrap 4
// dua code vao su kien addEventListener để lắng nghe sự kiện là khi DOM đã hoàn tất load xong thì funciton callback code bên trong sẽ được thực hiện
// $ là của JQuery nhưng vì tại thời điểm chạy code này JQUery chưa được import nên ta phải đưa vào sự kiện addEventListener. 
//Sau khi DOMContentLoaded đã xong thì Jquery đã được nạp rr nên sẽ không báo lỗi dấu $ trên conssole nữa

        document.addEventListener('DOMContentLoaded', function(){
          var courseId; //khởi tạo courseId bên ngoài để phía btnDeleteCourse cũng có thể lấy được giá trị này (local variable)
          var deleteForm = document.forms['delete-form'] //khởi tạo biến để gắn với form delete
          var restoreForm = document.forms['restore-form'] //khởi tạo biến để gắn với form restore
          var btnDeleteCourse = document.getElementById('btn-delete-course') //lấy id của nút xóa phía trên 
          var restoreBtn = $('.btn-restore'); //nếu dùng js thuần phải sử dụng for loop để duyết hết các nút 'khôi phục' --> sử dụng JQuery thì chỉ cần sử dụng selector của nó

          var checkboxAll = $('#checkbox-all');
          var shoesItemsCheckbox = $('input[name="shoesIds[]"]');
          var checkExecutedBtn = $('.btn-executed');
          var containerForm = document.forms['container-form'];



          $('#delete-shoes-modal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget) 
            courseId = button.data('id') //do phia tren ta su dung data-id nen phan nut lay data ta van cho id de xoa
            
        });
        
        //tạo một sự kiện onclick để xóa thật một database
        var btnDeleteCourse = document.getElementById('btn-delete-course') //lấy id của nút xóa phía trên 
        btnDeleteCourse.onclick = function(){
        deleteForm.action ='/courses/' + courseId + '/force?_method=DELETE'; //dùng override method để viết đè DELETE lên trên METHOD
        deleteForm.submit()
        }

        //restore click --> sử dụng listener của jquery
        restoreBtn.click(function(event){
          event.preventDefault(); //bỏ hành vi mặc định của html

        var courseId = $(this).data('id') //trả về jquery id của chính nút restore chúng ta nhấn
        restoreForm.action ='/courses/' + courseId + '/restore?_method=PATCH'; //dùng override method để viết đè DELETE lên trên METHOD
        restoreForm.submit()
        })


          checkboxAll.change(function(){
          var isCheckedAll = $(this).prop('checked') //return ve Boolean
          shoesItemsCheckbox.prop('checked',isCheckedAll); //dua tren gia tri boolean phia tren su dung jquery prop ("checked") theo gia tri boolean tra ve
          renderExecuteBtn()
          });

                //shoes item checkbox changed
        shoesItemsCheckbox.change(function(){
        var isCheckedAll = shoesItemsCheckbox.length === $('input[name="shoesIds[]"]:checked').length // so sanh cac element dang check voi tong so element dang co trong danh sach
        checkboxAll.prop('checked',isCheckedAll)
        renderExecuteBtn()
        })  

                // enabled nut execute
        function renderExecuteBtn(){
          var checkedCount = $('input[name="shoesIds[]"]:checked').length
          if(checkedCount > 0){
            checkExecutedBtn.removeClass('disabled')
          }else{
            checkExecutedBtn.add('disabled')
          }
        }

       //checked all executed button clicked
        checkExecutedBtn.on('submit', function(event){
          var isSubmitable = !$(this).hasClass('disabled')
          if(!isSubmitable){
               event.preventDefault();
          }
        })

    });
</script>